
services:

  backend :
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      NODE_ENV : ${NODE_ENV}
      PORT : ${PORT}

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET : ${JWT_REFRESH_SECRET}

      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_Region: ${MINIO_Region}

      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}

      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started

    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis

    command: ['redis-server', '--appendonly', 'yes'] # enables persistence

    ports:
      - 6379:6379

    volumes:
      - redis_data:/data

    networks:
      - app-network

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - '${MINIO_PORT}:${MINIO_PORT}' # S3 API
      - 9001:9001 # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}

    volumes:
      - minio_data:/data

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_started
    environment:
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: ${MINIO_BUCKET}
    volumes:
      - ./src/seed/minio_client_seed_files:/seed # Your seed files
      - ./init_minio_client.sh:/init_minio_client.sh # The script
    entrypoint: ['/bin/sh', '/init_minio_client.sh']

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  app-network:
    driver: bridge
