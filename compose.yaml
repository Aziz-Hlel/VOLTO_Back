services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}" # S3 API
      - 9001:9001 # Web UI
    environment:
      MINIO_ROOT_USER: MINIO_ROOT_USER
      MINIO_ROOT_PASSWORD: MINIO_ROOT_PASSWORD

    volumes:
      - minio_data:/data

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_started
    entrypoint: >
      /bin/sh -c " echo 'Waiting for MinIO to be ready...' && until mc alias set local http://minio:${MINIO_PORT} $MINIO_ACCESS_KEY $MINIO_SECRET_KEY; do
        echo 'Retrying...'; sleep 2; 
      done && echo 'Creating bucket \"$MINIO_BUCKET\" if not exists...' && mc mb local/$MINIO_BUCKET || echo 'Bucket already exists' && echo 'Setting public download access for \"$MINIO_BUCKET\"...' && mc anonymous set download local/$MINIO_BUCKET && echo 'Initialization complete.' "
volumes:
  db_data:
    driver: local
  minio_data:
    driver: local
